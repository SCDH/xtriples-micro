<?xml version="1.0" encoding="UTF-8"?>
<!-- Merge xslt packages from dependency packages into the local saxon configuration file.

The source locations of the dependencies' packages are adjusted.

USAGE:

target/bin/xslt.sh -xsl:utils/saxon-dependencies.xsl -s:saxon-local.xml -o:saxon.xml

-->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="#all" version="3.1"
    xpath-default-namespace="http://saxon.sf.net/ns/configuration">

    <!-- where to find dependencies, relative from source input file -->
    <xsl:param name="dependencies-directory" as="xs:anyURI"
        select="xs:anyURI('target/dependencies/')"/>

    <!-- the collection search string, see https://www.saxonica.com/documentation10/index.html#!sourcedocs/collections -->
    <xsl:param name="configuration-uris" as="xs:anyURI"
        select="resolve-uri(concat($dependencies-directory, '?recurse=yes&amp;select=saxon.xml'), base-uri())"/>

    <xsl:variable name="configurations" as="document-node()*"
        select="collection($configuration-uris)"/>

    <xsl:global-context-item as="document-node()" use="required"/>

    <xsl:mode on-no-match="shallow-copy"/>

    <xsl:template match="document-node()">
        <xsl:comment>Generated by <xsl:value-of select="static-base-uri()"/>. Do NOT edit! Changes will be lost.</xsl:comment>
        <xsl:apply-templates/>
    </xsl:template>

    <xsl:template match="xsltPackages">
        <xsl:message use-when="system-property('debug') eq 'true'">
            <xsl:text>Searching for saxon configurations under </xsl:text>
            <xsl:value-of select="$configuration-uris"/>
            <xsl:text>. Merging saxon configuration from files: </xsl:text>
            <xsl:value-of select="($configurations ! base-uri()) => string-join(' ')"/>
        </xsl:message>
        <xsl:copy>
            <xsl:apply-templates/>
            <xsl:for-each select="$configurations/descendant::xsltPackages/package">
                <xsl:variable name="abs-path" as="xs:anyURI" select="base-uri(.)"/>
                <xsl:variable name="rel-path" as="xs:string"
                    select="concat($dependencies-directory, substring-after($abs-path, $dependencies-directory)) => replace('/[^/]+$', '/')"/>
                <xsl:text>&#xa;        </xsl:text>
                <xsl:copy select="self::*">
                    <xsl:apply-templates mode="dependency" select="attribute() | node()">
                        <xsl:with-param name="rel-path" as="xs:string" select="$rel-path" tunnel="true"/>
                    </xsl:apply-templates>
                </xsl:copy>
            </xsl:for-each>
            <xsl:text>&#xa;    </xsl:text>
        </xsl:copy>
    </xsl:template>

    <xsl:mode name="dependency" on-no-match="shallow-copy"/>

    <xsl:template mode="dependency" match="@sourceLocation">
        <xsl:param name="rel-path" as="xs:string" tunnel="true"/>
        <xsl:attribute name="sourceLocation" select="concat($rel-path, .)"/>
    </xsl:template>

</xsl:stylesheet>
